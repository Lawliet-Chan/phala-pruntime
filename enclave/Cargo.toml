[package]
name = "EnclaveApp"
version = "0.0.1"
authors = ["jasl"]

[lib]
name = "enclaveapp"
crate-type = ["staticlib"]

[features]
default = [
  "sp-runtime-interface/disable_target_static_assertions",
  "sp-io/disable_panic_handler",
  "sp-io/disable_oom",
  "sp-io/disable_allocator",
]

[target.'cfg(not(target_env = "sgx"))'.dependencies]
sgx_types       = { path = "../rust-sgx-sdk/sgx_types" }
sgx_tstd        = { path = "../rust-sgx-sdk/sgx_tstd", features = ["net", "backtrace"] }
sgx_tcrypto     = { path = "../rust-sgx-sdk/sgx_tcrypto" }
sgx_tse         = { path = "../rust-sgx-sdk/sgx_tse" }
sgx_trts        = { path = "../rust-sgx-sdk/sgx_trts" }
sgx_rand        = { path = "../rust-sgx-sdk/sgx_rand" }
sgx_rand_derive = { path = "../rust-sgx-sdk/sgx_rand_derive" }

[dependencies]
chrono      = { path = "../vendor/chrono" }
webpki      = { path = "../vendor/webpki" }
base64      = { path = "../vendor/rust-base64" }
yasna       = { path = "../vendor/yasna", features = ["bit-vec", "num-bigint", "chrono"] }
num-bigint  = { path = "../vendor/num-bigint" }
bit-vec     = { version = "*", default-features = false}
httparse    = { version = "1.3.2", default-features = false }
itertools   = { version = "0.8", default-features = false, features = []}
ring        = { path = "../vendor/ring" }
rust-crypto = { path = "../vendor/rust-crypto" }
rustls      = { path = "../vendor/rustls" }
webpki-roots= { path = "../vendor/webpki-roots" }
serde       = { path = "../vendor/serde/serde", features = ["derive"] }
serde_json  = { path = "../vendor/serde-json" }
lazy_static = { version = "*", default-features = false, features = ["spin_no_std"] }
libsecp256k1= { path = "../vendor/libsecp256k1" }
rand        = { path = "../vendor/rand"}
rand_os     = { path = "../vendor/rand/rand_os"}

runtime              = { path = "../../experimental-node/node/runtime", default-features = false, package = "experimental-node-runtime" }
sp-io                = { version = "2.0.0", path = "../../experimental-node/substrate/primitives/io", default-features = false}
sp-runtime-interface = { version = "2.0.0", path = "../../experimental-node/substrate/primitives/runtime-interface", default-features = false}
sp-runtime           = { version = "2.0.0", path = "../../experimental-node/substrate/primitives/runtime", default-features = false}
codec                = { path = "../vendor/parity-scale-codec", package = "parity-scale-codec", default-features = false, features = ["derive"] }

csv-core = { version = "0.1.5", default-features = false }

[patch.crates-io]
memchr = { version = "2", path = "../vendor/rust-memchr" }

# [patch.'https://github.com/baidu/rust-sgx-sdk.git']
# sgx_alloc = { path = "../rust-sgx-sdk/sgx_alloc" }
# sgx_backtrace = { path = "../rust-sgx-sdk/sgx_backtrace" }
# sgx_backtrace_sys = { path = "../rust-sgx-sdk/sgx_backtrace_sys" }
# sgx_build_helper = { path = "../rust-sgx-sdk/sgx_build_helper" }
# sgx_cov = { path = "../rust-sgx-sdk/sgx_cov" }
# sgx_crypto_helper = { path = "../rust-sgx-sdk/sgx_crypto_helper" }
# sgx_demangle = { path = "../rust-sgx-sdk/sgx_demangle" }
# sgx_libc = { path = "../rust-sgx-sdk/sgx_libc" }
# sgx_rand = { path = "../rust-sgx-sdk/sgx_rand" }
# sgx_rand_derive = { path = "../rust-sgx-sdk/sgx_rand_derive" }
# sgx_serialize = { path = "../rust-sgx-sdk/sgx_serialize" }
# sgx_serialize_derive = { path = "../rust-sgx-sdk/sgx_serialize_derive" }
# sgx_serialize_derive_internals = { path = "../rust-sgx-sdk/sgx_serialize_derive_internals" }
# sgx_tcrypto = { path = "../rust-sgx-sdk/sgx_tcrypto" }
# sgx_tcrypto_helper = { path = "../rust-sgx-sdk/sgx_tcrypto_helper" }
# sgx_tdh = { path = "../rust-sgx-sdk/sgx_tdh" }
# sgx_tkey_exchange = { path = "../rust-sgx-sdk/sgx_tkey_exchange" }
# sgx_tprotected_fs = { path = "../rust-sgx-sdk/sgx_tprotected_fs" }
# sgx_trts = { path = "../rust-sgx-sdk/sgx_trts" }
# sgx_tse = { path = "../rust-sgx-sdk/sgx_tse" }
# sgx_tseal = { path = "../rust-sgx-sdk/sgx_tseal" }
# sgx_tservice = { path = "../rust-sgx-sdk/sgx_tservice" }
# sgx_tstd = { path = "../rust-sgx-sdk/sgx_tstd" }
# sgx_tunittest = { path = "../rust-sgx-sdk/sgx_tunittest" }
# sgx_types = { path = "../rust-sgx-sdk/sgx_types" }
# #sgx_ucrypto = { path = "../rust-sgx-sdk/sgx_ucrypto" }
# sgx_unwind = { path = "../rust-sgx-sdk/sgx_unwind" }
# #sgx_urts = { path = "../rust-sgx-sdk/sgx_urts" }
